language:
- cpp
- python

dist: trusty
sudo: false

matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7']
    env: COMPILER=g++-7
  - os: linux
    compiler: clang
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
        packages: ['clang-6.0', 'g++-7']
    env: COMPILER=clang++-6.0
  - os: osx
    osx_image: xcode10
    compiler: clang
    env: COMPILER=clang++
  - os: linux
    compiler: gcc
    language: cpp
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7']
    env:
      - C_COMPILER=gcc-7
      - COMPILER=g++-7
      - CXXFLAGS="-O0 --coverage -fno-inline -fno-inline-small-functions -fno-default-inline"
    before_script:
      - pip install --user cpp-coveralls
    after_success:
      - coveralls --gcov gcov-7 --gcov-options '\-lp' --root ${TRAVIS_BUILD_DIR} --build-root ${TRAVIS_BUILD_DIR}/build --extension cpp --extension hpp --exclude deps --include src
  - os: linux
    dist: xenial
    sudo: true
    language: python
    python: "3.7"
    services:
      - docker
    env:
      - CONAN_GCC_VERSIONS=8
      - CONAN_DOCKER_IMAGE=conanio/gcc8
    install:
      - pip install conan_package_tools
    script:
      - python .conan/build.py
  allow_failures:
  - language: python

notifications:
  email:
    on_success: never
    on_failure: always

install:
  - echo ${PATH}
  - cmake --version
  - export CC=${C_COMPILER}
  - export CXX=${COMPILER}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v

script:
  - mkdir -p build && cd build
  - cmake .. -DBUILD_TESTING=ON -Dlibuv_buildtests=OFF && make -j4
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -j4 -R uvw
